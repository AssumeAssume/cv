/* CSS for non-pagedown version of CV*/

* {
  box-sizing: border-box;
}

:root {
  --page-width: 8.5in;
  --margin-right: 0.5in;
  --margin-left: 0.25in;
  --content-width: calc(
    var(--page-width) - var(--margin-right) - var(--margin-left)
  );
  --root-font-size: 12pt;
  --sidebar-background-color: #f2f2f2;
  --decorator-horizontal-margin: 0.2in;

  --sidebar-horizontal-padding: 0.2in;

  /* XXX: using px for very good precision control */
  --decorator-outer-offset-top: 10px;
  --decorator-outer-offset-left: -5.5px;
  --decorator-border-width: 1px;
  --decorator-outer-dim: 9px;
  --decorator-border: 1px solid #ccc;

  --row-blocks-padding-top: 0.5rem;
  --date-block-width: 0.7in;

  --main-blocks-title-icon-offset-left: calc(
    -17pt - 0.25 * var(--root-font-size)
  );

  --viewer-background-color: #dcdcdc;
  --viewer-pages-spacing: 12px;
  --viewer-shadow-color: #313131;
}

html {
  font-size: var(--root-font-size);
}

body {
  font-family: "Open Sans", sans-serif;
  font-weight: 300;
  line-height: 1.3;
  color: #444;
  hyphens: auto;
}

/* Get rid of the header entirely */
#header {
  display: none;
}

/* Size logic goes here */
/* This is the width of all content. The left and right sidebars combined */

:root {
  /* This makes the sidebar 20% of the width of the main content */
  --sidebar-prop: 0.25;
  --sidebar-width: calc(var(--sidebar-prop) * 100%);
  --main-width: calc((1 - var(--sidebar-prop)) * 100%);
}
.main-container {
  max-width: 800px;
  position: relative;
  padding-top: 1.5rem;
}
/* This overides the default rmarkdown to make sizing more predicatable */
.container-fluid {
  padding-left: 0;
  padding-right: 0;
}
/* This is the left sidebar width */
#main {
  width: var(--main-width);
}
/* This is the right sidebar width */
.aside {
  width: var(--sidebar-width);
  padding-left: var(--sidebar-horizontal-padding);
  padding-right: var(--sidebar-horizontal-padding);
  font-size: 0.8rem;
  float: right;
  position: absolute;
  left: calc(100% - var(--sidebar-width));
}
/* Bring the first aside up to be even with top */
#main > .aside {
  margin-top: -0.25in;
}

.skill-bar {
  margin-top: 1px;
}

/* Common css between two formats */

/* Dont put the little fake list point in front of links */
.aside li::before {
  display: none;
}

/* Move closer to start and up towards header */
.aside ul {
  padding-left: 1rem;
}

.aside li::before {
  position: relative;
  margin-left: -4.25pt;
  content: "• ";
}

/* Make sure elements in asside are centered and have a nice small text */
.aside {
  line-height: 1.2;
  font-size: 0.75rem;
}

.main-container {
  margin-right: 0;
  margin-left: 0;
}

h1,
h2,
h3 {
  margin: 0;
  color: #000;
}

#main > h1,
#aside > h1,
#disclaimer > h2 {
  display: none;
}

li {
  list-style-type: none;
}
/* Link list needs numbers to make any sense */
#links li {
  list-style-type: decimal;
}

a {
  text-decoration: none;
}

img {
  max-width: 100%;
}

#main {
  padding: 0.25in;
  font-size: 0.7rem;
  float: left;
}

#aside {
  position: relative; /* for disclaimer */
  height: var(--content-area-height);
}

/* main */

/** big title **/
h1,
h2 {
  text-transform: uppercase;
}

#title {
  margin: auto 0.55in 0.3in auto;
  line-height: 1.2;
}

#title h1 {
  font-weight: 300;
  font-size: 1.8rem;
  line-height: 1.5;
}

#title h3 {
  font-size: 0.8rem;
}

/*** categorial blocks ***/

.main-block {
  margin-top: 0.1in;
}

#main h2 {
  position: relative;
  top: var(--row-blocks-padding-top);
  /* XXX: 0.5px for aligning fx printing */
  left: calc((var(--date-block-width) + var(--decorator-horizontal-margin)));
  font-weight: 400;
  font-size: 1.1rem;
  color: #555;
}

#main h2 > i {
  /* use absolute position to prevent icon's width from misaligning title */
  /* assigning a fixed width here is no better due to needing to align decorator
     line too */
  position: absolute;
  left: var(--main-blocks-title-icon-offset-left);
  z-index: 1; /* over decorator line */
  color: #444;
}

#main h2::after {
  /* extends the decorator line */
  height: calc(var(--row-blocks-padding-top) * 2);
  position: relative;
  top: calc(-1 * var(--row-blocks-padding-top));
  /* XXX: 0.5px for aligning fx printing */
  left: calc(-1 * var(--decorator-horizontal-margin));
  display: block;
  border-left: var(--decorator-border);
  z-index: 0;
  line-height: 0;
  font-size: 0;
  content: " ";
}

/* Dont have h2's pushed over to right in sidebar */
#links h2,
.aside h2 {
  position: static !important;
}
/* Hide the content lines in sidebar */
#links h2::after,
.aside h2::after {
  content: none !important;
}

/**** minor tweaks on the icon fonts ****/
#main h2 > .fa-graduation-cap {
  left: calc(var(--main-blocks-title-icon-offset-left) - 2pt);
  top: 2pt;
}

#main h2 > .fa-suitcase {
  top: 1pt;
}

#main h2 > .fa-folder-open {
  top: 1.5pt;
}

/**** individual row blocks (date - decorator - details) ****/

.blocks {
  display: flex;
  flex-flow: row nowrap;
}

.blocks > div {
  padding-top: var(--row-blocks-padding-top);
}

.date {
  flex: 0 0 var(--date-block-width);
  padding-top: calc(var(--row-blocks-padding-top) + 0.25rem) !important;
  padding-right: var(--decorator-horizontal-margin);
  font-size: 0.7rem;
  text-align: right;
  line-height: 1;
  max-width: var(--date-block-width);
}

.date span {
  display: block;
  text-align: center;
}

.date span:nth-child(2)::before {
  position: relative;
  top: 0.1rem;
  right: 0;
  display: block;
  height: 1rem;
  content: "|";
}

.decorator {
  flex: 0 0 0;
  position: relative;
  width: 2pt;
  min-height: 100%;
  border-left: var(--decorator-border);
}

/*
 * XXX: Use two filled circles to achieve the circle-with-white-border effect.
 * The normal technique of only using one pseudo element and
 * border: 1px solid white; style makes firefox erroneously either:
 * 1) overflows the grayshade background (if no background-clip is set), or
 * 2) shows decorator line which should've been masked by the white border
 *
 */

.decorator::before {
  position: absolute;
  top: var(--decorator-outer-offset-top);
  left: var(--decorator-outer-offset-left);
  content: " ";
  display: block;
  width: var(--decorator-outer-dim);
  height: var(--decorator-outer-dim);
  border-radius: calc(var(--decorator-outer-dim) / 2);
  background-color: #fff;
}

.decorator::after {
  position: absolute;
  top: calc(var(--decorator-outer-offset-top) + var(--decorator-border-width));
  left: calc(
    var(--decorator-outer-offset-left) + var(--decorator-border-width)
  );
  content: " ";
  display: block;
  width: calc(var(--decorator-outer-dim) - (var(--decorator-border-width) * 2));
  height: calc(
    var(--decorator-outer-dim) - (var(--decorator-border-width) * 2)
  );
  border-radius: calc(
    (var(--decorator-outer-dim) - (var(--decorator-border-width) * 2)) / 2
  );
  background-color: #555;
}

.blocks:last-child .decorator {
  /* slightly shortens it */
  margin-bottom: 0.25in;
}

/***** fine-tunes on the details block where the real juice is *****/

.details {
  flex: 1 0 0;
  padding-left: var(--decorator-horizontal-margin);
  padding-top: calc(
    var(--row-blocks-padding-top) - 0.05rem
  ) !important; /* not sure why but this is needed for better alignment */
}

.details header {
  color: #000;
}

.details h3 {
  font-size: 0.8rem;
}

.main-block:not(.concise) .details div {
  margin: 0.18in 0 0.1in 0;
}

.main-block:not(.concise) .details div:empty {
  margin: 0;
}

.main-block:not(.concise) .blocks:last-child .details div {
  margin-bottom: 0;
}

.main-block.concise .details div:not(.concise) {
  /* use padding to work around the fact that margin doesn't affect floated
     neighboring elements */
  padding: 0.05in 0 0.07in 0;
}

.details .place {
  float: left;
  font-size: 0.75rem;
}

.details .location {
  float: right;
}

.details div {
  clear: both;
}

/***** fine-tunes on the lists... *****/

#main ul {
  padding-left: 0.07in;
  margin: 0.08in 0;
}

#main li {
  margin: 0 0 0.025in 0;
}

/****** customize list symbol style ******/
#main li::before {
  position: relative;
  margin-left: -4.25pt;
  content: "• ";
}

/* Dont want the fancy symbols for aside or link lists */
#links li::before,
.aside li::before {
  content: none;
}

.details .concise ul {
  margin: 0 !important;
  -webkit-columns: 2;
  -moz-columns: 2;
  columns: 2;
}

.details .concise li {
  margin: 0 !important;
}

.details .concise li {
  margin-left: 0 !important;
}

/* sidebar */

.aside h2 {
  font-weight: 400;
  font-size: 1.1rem;
}

.aside .level2 {
  margin-top: 0.5in;
}

#contact ul {
  margin-top: 0.05in;
  padding-left: 0;
  font-weight: 400;
  line-height: 1.75;
}

#contact li > i {
  width: 0.9rem; /* for text alignment */
  text-align: right;
}

#skills {
  line-height: 1.5;
}

#skills ul {
  margin: 0.05in 0 0.15in;
  padding: 0;
}

#disclaimer {
  position: absolute;
  /* bottom: 0; */
  right: var(--sidebar-horizontal-padding);
  font-size: 0.75rem;
  font-style: italic;
  line-height: 1.1;
  text-align: right;
  color: #777;
}

#disclaimer code {
  color: #666;
  font-family: "Source Code Pro";
  font-weight: 400;
  font-style: normal;
}

/* Page breaks */

h2 {
  break-after: avoid;
}

.blocks {
  break-inside: avoid;
}
